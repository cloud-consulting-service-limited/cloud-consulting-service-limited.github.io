{"version":3,"sources":["./src/app/views/newaccount/newaccount.component.html","./src/app/views/newaccount/newaccountBasic.component.html","./src/app/views/newaccount/newaccountCreate.component.html","./src/app/views/newaccount/newaccountDocument.component.html","./src/app/views/newaccount/newaccountInvoice.component.html","./src/app/views/newaccount/newaccountQuotation.component.html","./src/app/views/newaccount/newaccount-routing.module.ts","./src/app/views/newaccount/newaccount.component.ts","./src/app/views/newaccount/newaccount.module.ts","./src/app/views/newaccount/newaccountBasic.component.ts","./src/app/views/newaccount/newaccountCreate.component.ts","./src/app/views/newaccount/newaccountDocument.component.ts","./src/app/views/newaccount/newaccountInvoice.component.ts","./src/app/views/newaccount/newaccountQuotation.component.ts"],"names":[],"mappings":"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","file":"views-newaccount-newaccount-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <h1 class=\\\"display-3\\\">New Account</h1>\\n\\n  <ngx-datatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n    [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRows\\\" [scrollbarH]=\\\"true\\\">\\n    <ngx-datatable-column *ngFor=\\\"let label of tableHeaders\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\" [sortable]=\\\"true\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        {{ value }}\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <button (click)='continue(rowIndex)'>Continue</button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n  </ngx-datatable>\\n  <br>\\n  <br>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Company Name</label>\\n    <ng-template #customItemTemplate let-model=\\\"item\\\" let-index=\\\"index\\\">\\n      <h5>{{model[\\\"Company Name\\\"]}} </h5>\\n      - [ {{model[\\\"Status\\\"]}} ]\\n    </ng-template>\\n    <input [(ngModel)]=\\\"selected\\\" [typeahead]=\\\"tableRows\\\" typeaheadOptionField=\\\"Company Name\\\" [typeaheadMinLength]=\\\"0\\\"\\n      (ngModelChange)=\\\"typeaheadNoResults($event)\\\" [typeaheadItemTemplate]=\\\"customItemTemplate\\\" class=\\\"form-control\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"> Create account only if it is not exist</small>\\n  </div>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!noResult\\\">Company Already Exist </div>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!noResult\\\" [routerLink]=\\\"['/newaccount','create',selected]\\\"\\n    [hidden]=\\\"!selected || !noResult\\\">Create Account</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"noResult\\\" (click)='continue(selectedIndex)'\\n    [hidden]=\\\"!selected || noResult\\\">Contine Working on {{selected}}</button>\\n\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <h1 class=\\\"display-3\\\">Basic Company Info</h1>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"inputAddress\\\">Company Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"Company Name\\\"\\n        [(ngModel)]=\\\"accountInfo['Company Name']\\\" readonly>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"inputAddress2\\\">Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Email\\\"\\n        [(ngModel)]=\\\"accountInfo['Email']\\\">\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"inputEmail4\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"First Name\\\"\\n          [(ngModel)]=\\\"accountInfo['First Name']\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label for=\\\"inputEmail4\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"Last Name\\\"\\n          [(ngModel)]=\\\"accountInfo['Last Name']\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label for=\\\"inputCity\\\">Phone</label>\\n        <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\" [(ngModel)]=\\\"accountInfo['Phone']\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label for=\\\"inputCity\\\">Whatsapp</label>\\n        <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\" [(ngModel)]=\\\"accountInfo['Whatsapp']\\\">\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <label for=\\\"inputZip\\\">Wechat</label>\\n        <input type=\\\"tel\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\" [(ngModel)]=\\\"accountInfo['Wechat']\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"inputAddress2\\\">Address</label>\\n      <textarea class=\\\"form-control\\\" aria-label=\\\"With textarea\\\" [(ngModel)]=\\\"accountInfo['Address']\\\"\\n        rows=\\\"6\\\"></textarea>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\">Next</button>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"basic-addon3\\\">Co Name</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"basic-url\\\" aria-describedby=\\\"basic-addon3\\\" value=\\\"{{ id }}\\\" readonly />\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"change-of-name\\\">Change of name</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Change of name\\\" aria-label=\\\"Change of Name\\\"\\n      aria-describedby=\\\"Change of name\\\" [(ngModel)]=\\\"accountDetail['change-of-name']\\\" />\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"older-name\\\">Older name</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Older Name\\\" aria-label=\\\"Older name\\\"\\n      aria-describedby=\\\"Older name\\\" [(ngModel)]=\\\"accountDetail['older-name']\\\" />\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"date-of-name-change\\\">Date of name change(i.e. 15 Mar 2019)</span>\\n    </div>\\n    <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"accountDetail['date-of-name-change'] \\\"\\n      bsDatepicker [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\"/>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"limited-by-shares-or-guarantee\\\">Limited by shares or guarantee</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"limited-by-shares-or-guarantee-input\\\" [(ngModel)]=\\\"accountDetail['limited-by-shares-or-gurantee']\\\">\\n      <option value=\\\" 1\\\" selected>Limited by share</option>\\n      <option value=\\\"2\\\">Limited by guarantee</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"financial-reporting\\\">Financial reporting</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Financial reporting\\\" aria-label=\\\"Financial reporting\\\"\\n      aria-describedby=\\\"Financial reporting\\\" [(ngModel)]=\\\"accountDetail['financial-reporting']\\\" />\\n  </div>\\n\\n  <label for=\\\"basic-url\\\">Directors</label>\\n\\n  <ngx-datatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n    [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRows\\\" [scrollbarH]=\\\"true\\\">\\n    <ngx-datatable-column *ngFor=\\\"let label of tableHeaders\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\" [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <span title=\\\"double Click here \\\" (dblclick)=\\\"editCell(label.prop, rowIndex)\\\"\\n          *ngIf=\\\"!editing[rowIndex + '-' + label.prop]\\\" class=\\\"container-fluid\\\">\\n          {{ value }}\\n        </span>\\n        <input autofocus (blur)=\\\"updateValue($event, label.prop, rowIndex)\\\"\\n          (keyup.enter)=\\\"updateValue($event, label.prop, rowIndex)\\\" *ngIf=\\\"editing[rowIndex + '-' + label.prop]\\\"\\n          [type]=\\\"label.inputType\\\" class=\\\"form-control\\\" [value]=\\\"value\\\" />\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <button (click)=\\\"deleteRow(rowIndex)\\\">remove</button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedMessage\\\">\\n            {{ selectedCount.toLocaleString() }} {{ selectedMessage }} /\\n          </span>\\n          {{ rowCount.toLocaleString() }} {{ totalMessage }}\\n          <a href=\\\"javascript:void(0)\\\" (click)=\\\"add()\\\" class=\\\"float-right\\\">Add a new column</a>\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n  </ngx-datatable>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"principal-activities\\\">Principal activities</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Principal activities\\\" aria-label=\\\"Principal activities\\\"\\n      aria-describedby=\\\"Principal activities\\\" [(ngModel)]=\\\"accountDetail['financial-activities']\\\">\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"director-appointment-clause\\\">Director- Appointment clause</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"director-appointment-clause-input\\\" [(ngModel)]=\\\"accountDetail['director-appointment-clause']\\\">\\n      <option value=\\\" 1\\\" selected>Retired and eligible</option>\\n      <option value=\\\"2\\\">No provision</option>\\n      <option value=\\\"3\\\">Unlimited</option>\\n      <option value=\\\"4\\\">re-elected</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"permitted-indemnity\\\">Permitted Indemnity</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"permitted-indemnity-input\\\" [(ngModel)]=\\\"accountDetail['permitted-indemnity']\\\">\\n      <option value=\\\" 1\\\" selected>No</option>\\n      <option value=\\\"2\\\">Yes</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"nature-of-income\\\">Nature of income</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"nature-of-income-input\\\" [(ngModel)]=\\\"accountDetail['nature-of-income']\\\">\\n      <option value=\\\" 1\\\" selected>Sales</option>\\n      <option value=\\\"2\\\">Services</option>\\n      <option value=\\\"3\\\">No income</option>\\n      <option value=\\\"4\\\">Rental</option>\\n      <option value=\\\"5\\\">Dormant</option>\\n      <option value=\\\"6\\\">Donation and divident income</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"offshore\\\">Offshore</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-label=\\\"Offshore\\\" aria-describedby=\\\"Offshore\\\"\\n      [(ngModel)]=\\\"accountDetail['offshore']\\\"/>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"last-year-is-period-or-first-incop\\\">Last year is period or first incop</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"last-year-is-period-or-first-incop-input\\\" [(ngModel)]=\\\"accountDetail['last-year-is-period-or-first-incop']\\\">\\n      <option value=\\\" 1\\\" selected>No</option>\\n      <option value=\\\"2\\\">Yes</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"first-incorp-date\\\">first incorp date (eg 15 Mar 17)</span>\\n    </div>\\n    <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\"  [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\" bsDatepicker [(ngModel)]=\\\"accountDetail['first-incorp-date'] \\\"/>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"first-incorporated\\\">First incorporated?</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"first-incorporated-input\\\" [(ngModel)]=\\\"accountDetail['first-incorporated']\\\">\\n      <option value=\\\" 1\\\" selected>No</option>\\n      <option value=\\\"2\\\">Yes</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"first-sme-frs\\\">First SME FRS?</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"first-sme-frs-input\\\" [(ngModel)]=\\\"accountDetail['first-sme-frs']\\\">\\n      <option value=\\\" 1\\\" selected>No</option>\\n      <option value=\\\"2\\\">Yes</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"input-this-year-ye\\\">Input this year YE here (eg 15 Mar 17)</span>\\n    </div>\\n    <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\" bsDatepicker [(ngModel)]=\\\"accountDetail['input-this-year-ye'] \\\"/>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"currenccy\\\">Currency</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"currency-input\\\" [(ngModel)]=\\\"accountDetail['currency']\\\">\\n      <option value=\\\" 1\\\" selected>HK$</option>\\n      <option value=\\\"2\\\">US$</option>\\n      <option value=\\\"3\\\">CAD</option>\\n      <option value=\\\"4\\\">EUR</option>\\n      <option value=\\\"5\\\">AUD</option>\\n      <option value=\\\"6\\\">GBP</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"type-of-co\\\">Type of Co</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"type-of-co-input\\\" [(ngModel)]=\\\"accountDetail['type-of-co']\\\">\\n      <option value=\\\" 1\\\" selected>Company</option>\\n      <option value=\\\"2\\\">Association</option>\\n      <option value=\\\"3\\\">Group</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"no-shares\\\">No. shares</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-label=\\\"No. shares\\\" aria-describedby=\\\"No. shares\\\"\\n      [(ngModel)]=\\\"accountDetail['no-shares']\\\"/>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"ro\\\">RO</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-label=\\\"RO\\\" aria-describedby=\\\"RO\\\" [(ngModel)]=\\\"accountDetail['ro']\\\"/>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"any-holding-co\\\">Any holding co</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"any-holding-co-input\\\" [(ngModel)]=\\\"accountDetail['any-holding-co']\\\">\\n      <option value=\\\" 1\\\" selected>No</option>\\n      <option value=\\\"2\\\">Yes</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\" input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" id=\\\"any-immediate-co\\\">Any immediate co</span>\\n    </div>\\n    <select class=\\\"custom-select\\\" id=\\\"any-immediate-co-input\\\" [(ngModel)]=\\\"accountDetail['any-immediate-co']\\\">\\n      <option value=\\\" 1\\\" selected>No</option>\\n      <option value=\\\"2\\\">Yes</option>\\n    </select>\\n  </div>\\n\\n  <label>Sub</label>\\n  <ngx-datatable class=\\\" bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n      [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRowsSub\\\" [scrollbarH]=\\\"true\\\">\\n    <ngx-datatable-column *ngFor=\\\"let label of tableHeadersSub\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\"\\n      [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <span title=\\\"double Click here \\\" (dblclick)=\\\"editCellSub(label.prop, rowIndex)\\\"\\n          *ngIf=\\\"!editingSub[rowIndex + '-' + label.prop]\\\" class=\\\"container-fluid\\\">\\n          {{ value }}\\n        </span>\\n        <input autofocus (blur)=\\\"updateValue($event, label.prop, rowIndex)\\\"\\n          (keyup.enter)=\\\"updateValueSub($event, label.prop, rowIndex)\\\" *ngIf=\\\"editingSub[rowIndex + '-' + label.prop]\\\"\\n          [type]=\\\"label.inputType\\\" class=\\\"form-control\\\" [value]=\\\"value\\\" />\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n      <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n        <button (click)=\\\"deleteRowSub(rowIndex)\\\">remove</button>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-footer>\\n      <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n        let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n        <div class=\\\"page-count\\\">\\n          <span *ngIf=\\\"selectedMessage\\\">\\n            {{ selectedCount.toLocaleString() }} {{ selectedMessage }} /\\n          </span>\\n          {{ rowCount.toLocaleString() }} {{ totalMessage }}\\n          <a href=\\\"javascript:void(0)\\\" (click)=\\\"addSub()\\\" class=\\\"float-right\\\">Add a new column</a>\\n        </div>\\n      </ng-template>\\n    </ngx-datatable-footer>\\n    </ngx-datatable>\\n\\n    <label>Asso</label>\\n    <ngx-datatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n      [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRowsAsso\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column *ngFor=\\\"let label of tableHeadersAsso\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\"\\n        [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"double Click here \\\" (dblclick)=\\\"editCellAsso(label.prop, rowIndex)\\\"\\n            *ngIf=\\\"!editingAsso[rowIndex + '-' + label.prop]\\\" class=\\\"container-fluid\\\">\\n            {{ value }}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, label.prop, rowIndex)\\\"\\n            (keyup.enter)=\\\"updateValueAsso($event, label.prop, rowIndex)\\\"\\n            *ngIf=\\\"editingAsso[rowIndex + '-' + label.prop]\\\" [type]=\\\"label.inputType\\\" class=\\\"form-control\\\"\\n            [value]=\\\"value\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <button (click)=\\\"deleteRowAsso(rowIndex)\\\">remove</button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedMessage\\\">\\n              {{ selectedCount.toLocaleString() }} {{ selectedMessage }} /\\n            </span>\\n            {{ rowCount.toLocaleString() }} {{ totalMessage }}\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"addAsso()\\\" class=\\\"float-right\\\">Add a new column</a>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n    </ngx-datatable>\\n\\n    <label>Shareholders</label>\\n\\n    <ngx-datatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n      [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRowsShareHolder\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column *ngFor=\\\"let label of tableHeadersShareHolder\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\"\\n        [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"double Click here \\\" (dblclick)=\\\"editCellShareHolder(label.prop, rowIndex)\\\"\\n            *ngIf=\\\"!editingShareHolder[rowIndex + '-' + label.prop]\\\" class=\\\"container-fluid\\\">\\n            {{ value }}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, label.prop, rowIndex)\\\"\\n            (keyup.enter)=\\\"updateValueShareHolder($event, label.prop, rowIndex)\\\"\\n            *ngIf=\\\"editingShareHolder[rowIndex + '-' + label.prop]\\\" [type]=\\\"label.inputType\\\" class=\\\"form-control\\\"\\n            [value]=\\\"value\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <button (click)=\\\"deleteRowShareHolder(rowIndex)\\\">remove</button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedMessage\\\">\\n              {{ selectedCount.toLocaleString() }} {{ selectedMessage }} /\\n            </span>\\n            {{ rowCount.toLocaleString() }} {{ totalMessage }}\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"addShareHolder()\\\" class=\\\"float-right\\\">Add a new column</a>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n    </ngx-datatable>\\n\\n    <label>Amount due from (to) related companies</label>\\n\\n    <ngx-datatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n      [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRowsAmountdueCo\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column *ngFor=\\\"let label of tableHeadersAmountdueCo\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\"\\n        [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"double Click here \\\" (dblclick)=\\\"editCellAmountdueCo(label.prop, rowIndex)\\\"\\n            *ngIf=\\\"!editingAmountdueCo[rowIndex + '-' + label.prop]\\\" class=\\\"container-fluid\\\">\\n            {{ value }}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, label.prop, rowIndex)\\\"\\n            (keyup.enter)=\\\"updateValueAmountdueCo($event, label.prop, rowIndex)\\\"\\n            *ngIf=\\\"editingAmountdueCo[rowIndex + '-' + label.prop]\\\" [type]=\\\"label.inputType\\\" class=\\\"form-control\\\"\\n            [value]=\\\"value\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <button (click)=\\\"deleteRowAmountdueCo(rowIndex)\\\">remove</button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedMessage\\\">\\n              {{ selectedCount.toLocaleString() }} {{ selectedMessage }} /\\n            </span>\\n            {{ rowCount.toLocaleString() }} {{ totalMessage }}\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"addAmountdueCo()\\\" class=\\\"float-right\\\">Add a new column</a>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n    </ngx-datatable>\\n\\n    <label>Amount due from (to) fellow subsidiaries</label>\\n\\n    <ngx-datatable class=\\\"bootstrap fullscreen\\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [columnMode]=\\\"'force'\\\"\\n      [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRowsAmountdueSub\\\" [scrollbarH]=\\\"true\\\">\\n      <ngx-datatable-column *ngFor=\\\"let label of tableHeadersAmountdueSub\\\" [name]=\\\"label.name\\\" [prop]=\\\"label.prop\\\"\\n        [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <span title=\\\"double Click here \\\" (dblclick)=\\\"editCellAmountdueSub(label.prop, rowIndex)\\\"\\n            *ngIf=\\\"!editingAmountdueSub[rowIndex + '-' + label.prop]\\\" class=\\\"container-fluid\\\">\\n            {{ value }}\\n          </span>\\n          <input autofocus (blur)=\\\"updateValue($event, label.prop, rowIndex)\\\"\\n            (keyup.enter)=\\\"updateValueAmountdueSub($event, label.prop, rowIndex)\\\"\\n            *ngIf=\\\"editingAmountdueSub[rowIndex + '-' + label.prop]\\\" [type]=\\\"label.inputType\\\" class=\\\"form-control\\\"\\n            [value]=\\\"value\\\" />\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-column name=\\\"Action\\\" [sortable]=\\\"false\\\">\\n        <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n          <button (click)=\\\"deleteRowAmountdueSub(rowIndex)\\\">remove</button>\\n        </ng-template>\\n      </ngx-datatable-column>\\n      <ngx-datatable-footer>\\n        <ng-template ngx-datatable-footer-template let-rowCount=\\\"rowCount\\\" let-pageSize=\\\"pageSize\\\"\\n          let-selectedCount=\\\"selectedCount\\\" let-curPage=\\\"curPage\\\" let-offset=\\\"offset\\\" let-isVisible=\\\"isVisible\\\">\\n          <div class=\\\"page-count\\\">\\n            <span *ngIf=\\\"selectedMessage\\\">\\n              {{ selectedCount.toLocaleString() }} {{ selectedMessage }} /\\n            </span>\\n            {{ rowCount.toLocaleString() }} {{ totalMessage }}\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"addAmountdueSub()\\\" class=\\\"float-right\\\">Add a new column</a>\\n          </div>\\n        </ng-template>\\n      </ngx-datatable-footer>\\n    </ngx-datatable>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg float-right\\\" (click)=\\\"save()\\\">\\n      Save and Finish\\n    </button>\\n    <br />\\n\\n    <label></label>\\n  </div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <h1 class=\\\"display-3\\\">Document Upload Request</h1>\\n  <accordion>\\n    <accordion-group heading=\\\"Customer Document Upload History\\\" [isOpen]=\\\"false\\\">\\n      <ngx-datatable class=\\\"bootstrap \\\" [headerHeight]=\\\"50\\\" [limit]=\\\"3\\\" [messages]=\\\"{emptyMessage:''}\\\"\\n        [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"accountInfo['documentsUploaded']\\\"\\n        [scrollbarH]=\\\"true\\\">\\n        <ngx-datatable-column name=\\\"#\\\" [sortable]=\\\"false\\\" maxWidth=\\\"40\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label>{{rowIndex+1}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"File Type\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label class=\\\"form-control\\\">File Type</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"File Name\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label class=\\\"form-control\\\">File Name</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Uploaded Date\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label class=\\\"form-control\\\"></label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n    </accordion-group>\\n\\n    <accordion-group [heading]=\\\"documentContentHeader\\\" [isOpen]=\\\"true\\\">\\n\\n      <div class=\\\"container\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputEmail4\\\">English</label>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputEmail4\\\">中文</label>\\n          </div>\\n          <div class=\\\"form-group col-md-1\\\">\\n            <label for=\\\"inputEmail4\\\">Ask</label>\\n          </div>\\n          <div class=\\\"form-group col-md-1\\\">\\n            <label for=\\\"inputEmail4\\\">Uploaded</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputEmail4\\\">Checked</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <hr />\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\" *ngFor=\\\"let item of documentRequestList ; let i = index\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputEmail4\\\">{{item[\\\"English\\\"]}}</label>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"inputEmail4\\\">{{item[\\\"Chinese\\\"]}}</label>\\n          </div>\\n          <div class=\\\"form-group col-md-1\\\">\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.documentRequestList[i]['Asked']\\\" />\\n          </div>\\n          <div class=\\\"form-group col-md-1\\\">\\n            <label *ngIf=\\\"this.documentRequestList[i]['Uploaded']\\\"> &#10004; </label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"this.documentRequestList[i]['Checked']\\\" />\\n          </div>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"!this.document['sentDate']\\\"> Send Document\\n          Reques to Client</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"this.document['sentDate']\\\"> Resend\\n          Additional Document Request</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirmDocument()\\\"\\n          *ngIf=\\\"this.document['sentDate']\\\">Documents Confirmed</button>\\n\\n        <ng-template #documentSentMsgTemplate>\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title pull-left\\\">Document Sent</h4>\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            Document Sent\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modalRef.hide()\\\">OK</button>\\n          </div>\\n        </ng-template>\\n\\n      </div>\\n    </accordion-group>\\n\\n    <accordion-group heading=\\\"Company Info\\\" [isOpen]=\\\"false\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputCompany\\\">Company Name :</label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCompany\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Company Name']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputAddress\\\">Email :</label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Email']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputEmail4\\\">Name: </label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Display Name']\\\" readonly>\\n          </div>\\n        </div>\\n      </div>\\n    </accordion-group>\\n\\n    <accordion-group heading=\\\"Document Request send History\\\" [isOpen]=\\\"false\\\">\\n      <ngx-datatable class=\\\"bootstrap \\\" [headerHeight]=\\\"50\\\" [limit]=\\\"3\\\" [messages]=\\\"{emptyMessage:''}\\\"\\n        [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"accountInfo['documents']\\\"\\n        [scrollbarH]=\\\"true\\\">\\n        <ngx-datatable-column name=\\\"#\\\" [sortable]=\\\"false\\\" maxWidth=\\\"40\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label>{{rowIndex+1}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Sent Date\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label\\n              class=\\\"form-control\\\">{{accountInfo['documents'][rowIndex]['sentDate'] | date: 'yyyy-MM-dd HH:mm:ss' }}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Number of Documents\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label class=\\\"form-control\\\">{{accountInfo['documents'][rowIndex]['documentAskedCount'] }}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n    </accordion-group>\\n\\n  </accordion>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <h1 class=\\\"display-3\\\">Invoice</h1>\\n  <accordion>\\n    <accordion-group heading=\\\"Invoice History\\\" [isOpen]=\\\"false\\\">\\n      <ngx-datatable class=\\\"bootstrap \\\" [headerHeight]=\\\"50\\\" [limit]=\\\"3\\\" [messages]=\\\"{emptyMessage:''}\\\"\\n        [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"accountInfo['invoices']\\\"\\n        [scrollbarH]=\\\"true\\\">\\n        <ngx-datatable-column name=\\\"#\\\" [sortable]=\\\"false\\\" maxWidth=\\\"40\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label>{{rowIndex+1}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Sent Date and Time\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label\\n              class=\\\"form-control\\\">{{accountInfo['invoices'][rowIndex]['sentDate'] | date: 'yyyy-MM-dd HH:mm:ss' }}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Total\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label class=\\\"form-control\\\">HKD$ {{accountInfo['invoices'][rowIndex]['total']}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Expiry Date\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label\\n              class=\\\"form-control\\\">{{accountInfo['invoices'][rowIndex]['Expiry Date'] | date: 'yyyy-MM-dd'}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n    </accordion-group>\\n    <accordion-group [heading]=\\\"invoiceContentHeader\\\" [isOpen]=\\\"true\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputCompany\\\">Company Name :</label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCompany\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Company Name']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputAddress\\\">Email :</label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Email']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputEmail4\\\">Name: </label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Display Name']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAddress2\\\">Address</label>\\n          <textarea class=\\\"form-control\\\" aria-label=\\\"With textarea\\\" [(ngModel)]=\\\"accountInfo['Address']\\\" readonly\\n            rows=\\\"6\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress2\\\">Invoice Date</label>\\n              <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"invoice['Invoice Date']\\\"\\n                [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\" bsDatepicker>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress2\\\">Expiry Date</label>\\n              <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"invoice['Expiry Date']\\\"\\n                [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\" bsDatepicker>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress2\\\">Class</label>\\n              <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\">\\n                <option selected value=\\\"Class 0\\\">Class 0</option>\\n                <option selected value=\\\"Class 1\\\">Class 1</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <label>Line of Items:</label>\\n\\n        <div>\\n          <ngx-datatable class=\\\"bootstrap \\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [messages]=\\\"{emptyMessage:''}\\\"\\n            [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"0\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRows\\\" [scrollbarH]=\\\"true\\\">\\n            <ngx-datatable-column name=\\\"#\\\" [sortable]=\\\"false\\\" maxWidth=\\\"40\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <label class=\\\"form-control\\\">{{rowIndex+1}}</label>\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Product/Service\\\" [sortable]=\\\"false\\\" maxWidth=\\\"150\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" value=\\\"Audit\\\"\\n                  [(ngModel)]=\\\"tableRows[rowIndex]['Product']\\\">\\n                  <option [value]=\\\"option\\\" *ngFor=\\\"let option of lineOptions\\\">{{option}}</option>\\n                </select>\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Description\\\" [sortable]=\\\"false\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tableRows[rowIndex]['Description']\\\">\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Amount(HKD)\\\" [sortable]=\\\"false\\\" maxWidth=\\\"150\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <input type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"1\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"tableRows[rowIndex]['Amount']\\\">\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"&nbsp;\\\" [sortable]=\\\"false\\\" maxWidth=\\\"60\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Delete\\\" (click)='deleteRow(rowIndex)'\\n                  class=\\\"form-control\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </ng-template>\\n            </ngx-datatable-column>\\n          </ngx-datatable>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-2\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"add()\\\">Add Line</button>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Sub-Total (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\">{{subTotal}}</label>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Discount Value (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <input type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"1\\\" [(ngModel)]=\\\"discount\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Total (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label>{{total}}</label>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Deposit (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <input type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"1\\\" [(ngModel)]=\\\"deposit\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Balance Due (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\">{{balanceDue}}</label>\\n          </div>\\n        </div>\\n\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"!this.invoice['sentDate']\\\"> Save and Send\\n          Invoice</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"this.invoice['sentDate']\\\"> Resend modified\\n          Invoice</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirmInvoice()\\\"\\n          *ngIf=\\\"this.invoice['sentDate']\\\">Invoice Confirmed and Send document upload request</button>\\n\\n        <ng-template #invoiceSentMsgTemplate>\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title pull-left\\\">Invoice Sent</h4>\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            Invoice Sent\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modalRef.hide()\\\">OK</button>\\n          </div>\\n        </ng-template>\\n\\n      </div>\\n    </accordion-group>\\n  </accordion>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <h1 class=\\\"display-3\\\">Quotation</h1>\\n  <accordion>\\n    <accordion-group heading=\\\"Quotation History\\\" [isOpen]=\\\"false\\\">\\n      <ngx-datatable class=\\\"bootstrap \\\" [headerHeight]=\\\"50\\\" [limit]=\\\"3\\\" [messages]=\\\"{emptyMessage:''}\\\"\\n        [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"30\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"accountInfo['quotations']\\\"\\n        [scrollbarH]=\\\"true\\\">\\n        <ngx-datatable-column name=\\\"#\\\" [sortable]=\\\"false\\\" maxWidth=\\\"40\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label>{{rowIndex+1}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Sent Date and Time\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label\\n              class=\\\"form-control\\\">{{accountInfo['quotations'][rowIndex]['sentDate'] | date: 'yyyy-MM-dd HH:mm:ss' }}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Total\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label class=\\\"form-control\\\">HKD$ {{accountInfo['quotations'][rowIndex]['total']}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Expiry Date\\\" [sortable]=\\\"false\\\">\\n          <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n            <label\\n              class=\\\"form-control\\\">{{accountInfo['quotations'][rowIndex]['Expiry Date'] | date: 'yyyy-MM-dd'}}</label>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n    </accordion-group>\\n    <accordion-group [heading]=\\\"quotationContentHeader\\\" [isOpen]=\\\"true\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputCompany\\\">Company Name :</label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCompany\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Company Name']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputAddress\\\">Email :</label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Email']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-3\\\">\\n            <label for=\\\"inputEmail4\\\">Name: </label>\\n          </div>\\n          <div class=\\\"form-group col-md-9\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"\\\"\\n              [(ngModel)]=\\\"accountInfo['Display Name']\\\" readonly>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAddress2\\\">Address</label>\\n          <textarea class=\\\"form-control\\\" aria-label=\\\"With textarea\\\" [(ngModel)]=\\\"accountInfo['Address']\\\" readonly\\n            rows=\\\"6\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress2\\\">Quotation Date</label>\\n              <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"quotation['Quotation Date']\\\"\\n                [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\" bsDatepicker>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress2\\\">Expiry Date</label>\\n              <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"quotation['Expiry Date']\\\"\\n                [bsConfig]=\\\"{dateInputFormat: 'YYYY-MM-DD'}\\\" bsDatepicker>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"inputAddress2\\\">Class</label>\\n              <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\">\\n                <option selected value=\\\"Class 0\\\">Class 0</option>\\n                <option selected value=\\\"Class 1\\\">Class 1</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <label>Line of Items:</label>\\n\\n        <div>\\n          <ngx-datatable class=\\\"bootstrap \\\" [headerHeight]=\\\"50\\\" [limit]=\\\"100\\\" [messages]=\\\"{emptyMessage:''}\\\"\\n            [columnMode]=\\\"'force'\\\" [footerHeight]=\\\"0\\\" [rowHeight]=\\\"'auto'\\\" [rows]=\\\"tableRows\\\" [scrollbarH]=\\\"true\\\">\\n            <ngx-datatable-column name=\\\"#\\\" [sortable]=\\\"false\\\" maxWidth=\\\"40\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <label class=\\\"form-control\\\">{{rowIndex+1}}</label>\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Product/Service\\\" [sortable]=\\\"false\\\" maxWidth=\\\"150\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <select class=\\\"custom-select\\\" id=\\\"inputGroupSelect01\\\" value=\\\"Audit\\\"\\n                  [(ngModel)]=\\\"tableRows[rowIndex]['Product']\\\">\\n                  <option [value]=\\\"option\\\" *ngFor=\\\"let option of lineOptions\\\">{{option}}</option>\\n                </select>\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Description\\\" [sortable]=\\\"false\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tableRows[rowIndex]['Description']\\\">\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Amount(HKD)\\\" [sortable]=\\\"false\\\" maxWidth=\\\"150\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <input type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"1\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"tableRows[rowIndex]['Amount']\\\">\\n              </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"&nbsp;\\\" [sortable]=\\\"false\\\" maxWidth=\\\"60\\\">\\n              <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Delete\\\" (click)='deleteRow(rowIndex)'\\n                  class=\\\"form-control\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </ng-template>\\n            </ngx-datatable-column>\\n          </ngx-datatable>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-2\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"add()\\\">Add Line</button>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Sub-Total (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\">{{subTotal}}</label>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Discount Value (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <input type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"1\\\" [(ngModel)]=\\\"discount\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Total (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label>{{total}}</label>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Deposit (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <input type=\\\"number\\\" min=\\\"0.00\\\" step=\\\"1\\\" [(ngModel)]=\\\"deposit\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-8\\\">\\n            <label for=\\\"inputAddress2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\" class=\\\"float-right\\\">Balance Due (HKD$):</label>\\n          </div>\\n          <div class=\\\"form-group col-md-2\\\">\\n            <label for=\\\"inputAddress2\\\">{{balanceDue}}</label>\\n          </div>\\n        </div>\\n\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"!this.quotation['sentDate']\\\"> Save and\\n          Send Quotation</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"next()\\\" *ngIf=\\\"this.quotation['sentDate']\\\"> Resend\\n          modified Quotation</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirmQuotation()\\\"\\n          *ngIf=\\\"this.quotation['sentDate']\\\">Quotation Confirmed</button>\\n\\n        <ng-template #quotationSentMsgTemplate>\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title pull-left\\\">Quotation Sent</h4>\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            Quotation Sent\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"modalRef.hide()\\\">OK</button>\\n          </div>\\n        </ng-template>\\n\\n      </div>\\n    </accordion-group>\\n  </accordion>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewaccountComponent } from './newaccount.component';\nimport { NewaccountCreateComponent } from './newaccountCreate.component';\nimport { NewaccountBasicComponent } from './newaccountBasic.component';\nimport { NewaccountQuotationComponent } from './newaccountQuotation.component';\nimport { NewaccountInvoiceComponent } from './newaccountInvoice.component';\nimport { NewaccountDocumentComponent } from './newaccountDocument.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewaccountComponent,\n    data: {\n      title: 'New account'\n    },\n  },\n  {\n      path: 'create',\n      component: NewaccountBasicComponent,\n      data: {\n        title: 'Create Account /  0. Basic Company Info'\n      },\n      children: [\n          {\n              path: ':id',\n              component: NewaccountBasicComponent,\n              data: {\n                title: 'Create Account -> 0. Basic Company Info'\n              }\n          }\n      ]\n  },\n  {\n      path: 'invoice',\n      component: NewaccountInvoiceComponent,\n      data: {\n        title: 'Create Account / 2. Invoice'\n      },\n      children: [\n          {\n              path: ':id',\n              component: NewaccountInvoiceComponent,\n              data: {\n                title: 'Create Account / 2. Invoice'\n              }\n          }\n      ]\n  },\n  {\n      path: 'quotation',\n      component: NewaccountQuotationComponent,\n      data: {\n        title: 'Create Account /  1. Quotation'\n      },\n      children: [\n          {\n              path: ':id',\n              component: NewaccountQuotationComponent,\n              data: {\n                title: 'Create Account -> 1. Quotation'\n              }\n          }\n      ]\n  },\n  {\n      path: 'document',\n      component: NewaccountDocumentComponent,\n      data: {\n        title: 'Create Account /  3. Document Upload'\n      },\n      children: [\n          {\n              path: ':id',\n              component: NewaccountDocumentComponent,\n              data: {\n                title: 'Create Account -> 3. Document Upload'\n              }\n          }\n      ]\n  },\n  {\n      path: 'detail',\n      component: NewaccountCreateComponent,\n      data: {\n        title: 'Create Account -> 4. Enter account details'\n      },\n      children: [\n          {\n              path: ':id',\n              component: NewaccountCreateComponent,\n              data: {\n                title: 'Create Account -> 4. Enter account details'\n              }\n          }\n      ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewaccountRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { ActivatedRoute, Route, ActivatedRouteSnapshot, UrlSegment, Params, Data, Router} from '@angular/router';\n\n\n@Component({\n  templateUrl: 'newaccount.component.html'\n})\nexport class NewaccountComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n    console.log('constructing NewaccountComponent');\n  }\n\n  selected: string;\n  accountList: any;\n  selectedIndex: string;\n  noResult = true;\n  id: string;\n\n  tableRows = [ {'Company Name': 'TCC Consulting Service Limited', 'Status': '3. Enter account details'},  {'Company Name': 'Cloud Consulting Service Limited', 'Status': '2. Invoice'}];\n\n  tableHeaders = [{'name': 'Company Name', 'prop': 'Company Name'}, {'name': 'Status', 'prop': 'Status'}];\n\n  continue(rowIndex): void {\n    const account = this.tableRows[rowIndex];\n    const status = account['Status'].charAt(0);\n    let route = '';\n    switch (status) {\n     case '1':\n       route = 'quotation';\n       break;\n     case '2':\n       route = 'invoice';\n       break;\n     case '3':\n       route = 'document';\n       break;\n     case '4':\n       route = 'detail';\n       break;\n     default:\n       route = 'create';\n    }\n    console.log('status:' + status + ' route:' + route);\n    this.router.navigate(['newaccount', route, account['Company Name']]);\n\n  }\n\n  ngOnInit(): void {\n    // generate random values for mainChart\n    this.route.params.subscribe(params => {\n       // this.id = +params['id']; // (+) converts string 'id' to a number\n       let route = this.route.snapshot;\n\n       while (route.firstChild) {\n           route = route.firstChild;\n       }\n\n\n       this.id =  route.params['id'];\n       console.log('id: ' + this.id);\n    });\n\n    const stringAccountList = localStorage.getItem('accountList');\n    console.log(stringAccountList);\n    this.accountList = JSON.parse(stringAccountList);\n    if (!this.accountList) {\n        this.accountList = [ {'Company Name': 'TCC Consulting Service Limited', 'Status': '3. Upload Documents'},  {'Company Name': 'Cloud Consulting Service Limited', 'Status': '2. Invoice'}];\n    }\n    this.tableRows = this.accountList;\n\n  }\n\n  typeaheadNoResults(event: string): void {\n    let foundindex = -1;\n    for (let i = 0; i < this.tableRows.length; i ++) {\n      if (this.tableRows[i]['Company Name'] === this.selected) {\n         foundindex = i;\n         break;\n      }\n    }\n    if (foundindex >= 0) { this.selectedIndex = foundindex.toString(); }\n    this.noResult = (foundindex < 0 );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { CommonModule } from '@angular/common';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { NewaccountComponent } from './newaccount.component';\nimport { NewaccountCreateComponent } from './newaccountCreate.component';\nimport { NewaccountBasicComponent } from './newaccountBasic.component';\nimport { NewaccountQuotationComponent } from './newaccountQuotation.component';\nimport { NewaccountInvoiceComponent } from './newaccountInvoice.component';\nimport { NewaccountDocumentComponent } from './newaccountDocument.component';\nimport { NewaccountRoutingModule } from './newaccount-routing.module';\n\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\n\n@NgModule({\n  imports: [\n    NgxDatatableModule,\n    NewaccountRoutingModule,\n    FormsModule,\n    CommonModule,\n    ChartsModule,\n    BsDropdownModule,\n    AccordionModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ButtonsModule.forRoot()\n  ],\n\n  declarations: [ NewaccountComponent\n    , NewaccountCreateComponent\n    , NewaccountBasicComponent\n    , NewaccountQuotationComponent\n    , NewaccountInvoiceComponent\n    , NewaccountDocumentComponent\n  ]\n})\nexport class NewaccountModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { ActivatedRoute, Route, ActivatedRouteSnapshot, UrlSegment, Params, Data, Router } from '@angular/router';\n\n\n@Component({\n  templateUrl: 'newaccountBasic.component.html'\n})\nexport class NewaccountBasicComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n    console.log(\"constructing NewaccountBasicComponent\")\n  }\n\n  id: string;\n\n  accountInfo={};\n  accountList=[];\n\n  next(): void {\n      this.accountInfo['Status'] = '1. Quotation';\n      var foundindex=-1;\n      for (var i=0; i< this.accountList.length; i ++) {\n         if (this.accountList[i]['Company Name'] === this.accountInfo['Company Name']) {\n            foundindex=i;\n            break;\n         }\n      }\n      if (foundindex >= 0 ) {\n         this.accountList[foundindex] = this.accountInfo;\n      } else {\n         this.accountList.push(this.accountInfo);\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.router.navigate(['newaccount','quotation', this.id]);\n  }\n  ngOnInit(): void {\n    // generate random values for mainChart\n    this.route.params.subscribe(params => {\n       // this.id = +params['id']; // (+) converts string 'id' to a number\n       let route = this.route.snapshot;\n\n       while (route.firstChild) {\n           route = route.firstChild;\n       }\n\n\n       this.id =  route.params['id'];\n       console.log(\"id: \"+this.id);\n       var stringAccountList = localStorage.getItem('accountList');\n       this.accountList = JSON.parse(stringAccountList);\n       if (!this.accountList) {\n           this.accountList = [ {\"Company Name\": \"TCC Consulting Service Limited\", \"Status\": \"3. Enter account details\"},  {\"Company Name\": \"Cloud Consulting Service Limited\", \"Status\": \"2. Invoice\"}];\n       }\n       var foundindex = -1;\n       for (var i=0;i < this.accountList.length; i++) {\n          console.log(\"Company Name:\"+this.accountList[i]['Company Name']);\n          if (this.accountList[i]['Company Name'] === this.id) {\n             foundindex = i;\n             break;\n          }\n       }\n       console.log(\"found index:\"+ foundindex);\n       if (foundindex >0 ) this.accountInfo = this.accountList[foundindex];\n       this.accountInfo[\"Company Name\"] = this.id;\n    });\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { ActivatedRoute, Route, ActivatedRouteSnapshot, UrlSegment, Params, Data, Router } from '@angular/router';\n\n\n\n\n@Component({\n  templateUrl: 'newaccountCreate.component.html',\n  styles: [\n    `\n      .input-group>.input-group-prepend {\n          flex: 0 0 20%;\n      } .input-group .input-group-text {\n          width: 100%;\n      }\n    `\n  ]\n})\nexport class NewaccountCreateComponent implements OnInit {\n\n  tableHeaders = [{\"name\":\"Name\",\"prop\":\"Name\"}, {\"name\":\"Option\",\"prop\":\"Option\"}, {\"name\":\"Appointed On\", \"prop\":\"Appointed On\"}, {\"name\":\"Resigned On\", \"prop\":\"Resigned On\"},{\"name\":\"Salary\", \"prop\":\"Salary\"}, {\"name\":\"MPF\",\"prop\":\"MPF\"}];\n  tableHeadersSub = [{\"name\":\"Name of sub\",\"prop\":\"Name of sub\"},{\"name\":\"Place of sub\",\"prop\":\"Place of sub\"},{\"name\":\"% of holding sub\",\"prop\":\"% of holding sub\"}, {\"name\":\"Activity of sub\",\"prop\":\"Activity of sub\"}];\n  tableHeadersAsso = [{\"name\":\"Name of asso\",\"prop\":\"Name of asso\"},{\"name\":\"Place of asso\",\"prop\":\"Place of asso\"},{\"name\":\"% of holding asso\",\"prop\":\"% of holding asso\"}, {\"name\":\"Activity of asso\",\"prop\":\"Activity of asso\"}];\n  tableHeadersShareHolder = [{\"name\":\"Name\",\"prop\":\"Name\"}, {\"name\":\"CY\",\"prop\":\"CY\"},{\"name\":\"LY\",\"prop\":\"LY\"}];\n  tableHeadersAmountdueCo = [{\"name\":\"Name\",\"prop\":\"Name\"}, {\"name\":\"CY\",\"prop\":\"CY\"},{\"name\":\"LY\",\"prop\":\"LY\"}];\n  tableHeadersAmountdueSub = [{\"name\":\"Name\",\"prop\":\"Name\"}, {\"name\":\"CY\",\"prop\":\"CY\"},{\"name\":\"LY\",\"prop\":\"LY\"}];\n\n  tableRows = [];\n  tableRowsSub = [];\n  tableRowsAsso = [];\n  tableRowsShareHolder = [];\n  tableRowsAmountdueCo = [];\n  tableRowsAmountdueSub = [];\n\n  editing ={};\n  editingSub ={};\n  editingAsso ={};\n  editingShareHolder ={};\n  editingAmountdueCo ={};\n  editingAmountdueSub ={};\n  accountDetail = {};\n  accountList = [];\n  accountInfo = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n    console.log(\"contructing NewaccountCreateComponent\")\n  }\n\n  id: string;\n\n  save() {\n    this.accountDetail['directors'] = this.tableRows;\n    this.accountDetail['sub'] = this.tableRowsSub;\n    this.accountDetail['asso'] = this.tableRowsAsso;\n    this.accountDetail['share-holder'] = this.tableRowsShareHolder;\n    this.accountDetail['amount-due-co'] = this.tableRowsAmountdueCo;\n    this.accountDetail['amount-due-sub'] = this.tableRowsAmountdueSub;\n    this.accountInfo['accountDetail']=this.accountDetail;\n    localStorage.setItem('accountList', JSON.stringify(this.accountList));\n    this.router.navigate(['newaccount']);\n  }\n  add() {\n    let temp = [...this.tableRows];\n    temp.push( {\"Name\": \"Double Click to Edit\",\"Option\": \"Double Click to Edit\",\"Appointed On\": \"Double Click to Edit\",\"Resigned On\": \"Double Click to Edit\", \"Salary\":\"Double Click to Edit\", \"MPF\":\"Double Click to Edit\"});\n    this.tableRows = temp;\n  }\n\n  deleteRow(rowIndex) {\n    let temp = [...this.tableRows];\n    temp.splice(rowIndex, 1);\n    this.tableRows = temp;\n  }\n\n  addSub() {\n    let temp = [...this.tableRowsSub];\n    temp.push( {\"Name of sub\": \"Double Click to Edit\",\"Place of sub\": \"Double Click to Edit\",\"% of holding sub\": \"Double Click to Edit\",\"Activity of sub\": \"Double Click to Edit\"});\n    this.tableRowsSub = temp;\n  }\n\n  deleteRowSub(rowIndex) {\n    let temp = [...this.tableRowsSub];\n    temp.splice(rowIndex, 1);\n    this.tableRowsSub = temp;\n  }\n\n  addAsso() {\n    let temp = [...this.tableRowsAsso];\n    temp.push( {\"Name of asso\": \"Double Click to Edit\",\"Place of asso\": \"Double Click to Edit\",\"% of holding asso\": \"Double Click to Edit\",\"Activity of asso\": \"Double Click to Edit\"});\n    this.tableRowsAsso = temp;\n  }\n\n  deleteRowAsso(rowIndex) {\n    let temp = [...this.tableRowsAsso];\n    temp.splice(rowIndex, 1);\n    this.tableRowsAsso = temp;\n  }\n\n  addShareHolder() {\n    let temp = [...this.tableRowsShareHolder];\n    temp.push( {\"Name\": \"Double Click to Edit\",\"CY\": \"Double Click to Edit\",\"LY\": \"Double Click to Edit\"});\n    this.tableRowsShareHolder = temp;\n  }\n\n  deleteRowShareHolder(rowIndex) {\n    let temp = [...this.tableRowsShareHolder];\n    temp.splice(rowIndex, 1);\n    this.tableRowsShareHolder = temp;\n  }\n\n  addAmountdueCo() {\n    let temp = [...this.tableRowsAmountdueCo];\n    temp.push( {\"Name\": \"Double Click to Edit\",\"CY\": \"Double Click to Edit\",\"LY\": \"Double Click to Edit\"});\n    this.tableRowsAmountdueCo = temp;\n  }\n\n  deleteRowAmountdueCo(rowIndex) {\n    let temp = [...this.tableRowsAmountdueCo];\n    temp.splice(rowIndex, 1);\n    this.tableRowsAmountdueCo = temp;\n  }\n\n  addAmountdueSub() {\n    let temp = [...this.tableRowsAmountdueSub];\n    temp.push( {\"Name\": \"Double Click to Edit\",\"CY\": \"Double Click to Edit\",\"LY\": \"Double Click to Edit\"});\n    this.tableRowsAmountdueSub= temp;\n  }\n\n  deleteRowAmountdueSub(rowIndex) {\n    let temp = [...this.tableRowsAmountdueSub];\n    temp.splice(rowIndex, 1);\n    this.tableRowsAmountdueSub = temp;\n  }\n\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.tableRows[rowIndex][cell] = event.target.value;\n    this.tableRows = [...this.tableRows];\n  }\n\n  editCell(cell, rowIndex) {\n    this.editing = {};\n    this.editing[rowIndex + '-' + cell] = true;\n  }\n\n  updateValueSub(event, cell, rowIndex) {\n    this.editingSub[rowIndex + '-' + cell] = false;\n    this.tableRowsSub[rowIndex][cell] = event.target.value;\n    this.tableRowsSub = [...this.tableRowsSub];\n  }\n\n  editCellSub(cell, rowIndex) {\n    this.editingSub = {};\n    this.editingSub[rowIndex + '-' + cell] = true;\n  }\n\n  updateValueAsso(event, cell, rowIndex) {\n    this.editingAsso[rowIndex + '-' + cell] = false;\n    this.tableRowsAsso[rowIndex][cell] = event.target.value;\n    this.tableRowsAsso = [...this.tableRowsAsso];\n  }\n\n  editCellAsso(cell, rowIndex) {\n    this.editingAsso = {};\n    this.editingAsso[rowIndex + '-' + cell] = true;\n  }\n\n  updateValueShareHolder(event, cell, rowIndex) {\n    this.editingShareHolder[rowIndex + '-' + cell] = false;\n    this.tableRowsShareHolder[rowIndex][cell] = event.target.value;\n    this.tableRowsShareHolder = [...this.tableRowsShareHolder];\n  }\n\n  editCellShareHolder(cell, rowIndex) {\n    this.editingShareHolder = {};\n    this.editingShareHolder[rowIndex + '-' + cell] = true;\n  }\n\n  updateValueAmountdueCo(event, cell, rowIndex) {\n    this.editingAmountdueCo[rowIndex + '-' + cell] = false;\n    this.tableRowsAmountdueCo[rowIndex][cell] = event.target.value;\n    this.tableRowsAmountdueCo = [...this.tableRowsAmountdueCo];\n  }\n\n  editCellAmountdueCo(cell, rowIndex) {\n    this.editingAmountdueCo = {};\n    this.editingAmountdueCo[rowIndex + '-' + cell] = true;\n  }\n\n  updateValueAmountdueSub(event, cell, rowIndex) {\n    this.editingAmountdueSub[rowIndex + '-' + cell] = false;\n    this.tableRowsAmountdueSub[rowIndex][cell] = event.target.value;\n    this.tableRowsAmountdueSub = [...this.tableRowsAmountdueSub];\n  }\n\n  editCellAmountdueSub(cell, rowIndex) {\n    this.editingAmountdueSub = {};\n    this.editingAmountdueSub[rowIndex + '-' + cell] = true;\n  }\n\n\n  ngOnInit(): void {\n    // generate random values for mainChart\n    this.route.params.subscribe(params => {\n       // this.id = +params['id']; // (+) converts string 'id' to a number\n       let route = this.route.snapshot;\n\n       while (route.firstChild) {\n           route = route.firstChild;\n       }\n\n\n       this.id =  route.params['id'];\n       console.log(\"id: \"+this.id);\n       var stringInput = localStorage.getItem('accountList');\n       this.accountList = JSON.parse(stringInput);\n       if (!this.accountList) {\n           return;\n       }\n\n       var foundindex=0;\n       for (var i=0; i < this.accountList.length; i ++) {\n           if (this.accountList[i]['Company Name'] === this.id){\n               foundindex = i;\n               break;\n           }\n       }\n       if (foundindex < 0 ) return;\n       this.accountInfo = this.accountList[foundindex];\n       if (this.accountInfo['accountDetail']) {\n           this.accountDetail = this.accountInfo['accountDetail'];\n           this.tableRows = this.accountDetail['directors'];\n           this.tableRowsSub = this.accountDetail['sub'];\n           this.tableRowsAsso = this.accountDetail['asso'];\n           this.tableRowsShareHolder = this.accountDetail['share-holder'];\n           this.tableRowsAmountdueCo = this.accountDetail['amount-due-co'];\n           this.tableRowsAmountdueSub = this.accountDetail['amount-due-sub'];\n           this.accountDetail = this.accountInfo['accountDetail'];\n\n       }\n    });\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { ActivatedRoute, Route, ActivatedRouteSnapshot, UrlSegment, Params, Data, Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport {TemplateRef} from '@angular/core';\n\n\n\n\n@Component({\n  templateUrl: 'newaccountDocument.component.html'\n})\nexport class NewaccountDocumentComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: BsModalService,\n    private router: Router,\n  ) {\n    console.log(\"constructing NewaccountDocumentComponent\")\n  }\n  modalRef: BsModalRef;\n  id: string;\n\n  @ViewChild('documentSentMsgTemplate') templateref: TemplateRef<any>;\n  document={};\n\n  accountInfo={};\n  accountList=[];\n\n  discount=0;\n  deposit=0;\n\n  confirmDocument(): void {\n      this.accountInfo['documents'][0]['confirmed']=true;\n      this.accountInfo['documents'][0]['confirmed date']= new Date();\n      this.accountInfo['Status'] = '4. Enter Account Details';\n      for (var i=1; i< this.accountInfo['documents'].length; i++ ) {\n          this.accountInfo['documents'][i]['confirmed']=false;\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.router.navigate(['newaccount','detail', this.id]);\n  }\n  next(): void {\n      this.document['documentRequestList'] = this.documentRequestList;\n      var cnt = 0;\n      for (var i=0; i< this.documentRequestList.length; i++) {\n          if (this.documentRequestList[i]['Asked']) {\n\t      cnt ++;\n\t  }\n      }\n      this.document['sentDate'] = new Date();\n      this.document['documentAskedCount'] = cnt;\n      var documents = [];\n      if (this.accountInfo['documents']) {\n         this.accountInfo['documents'].unshift(this.document);\n      } else {\n         documents.push(this.document);\n         this.accountInfo['documents'] = documents;\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.modalRef = this.modalService.show(this.templateref);\n  }\n\n\n\n  documentRequestList = [\n   { \"Chinese\": \"業務性質\", \"English\":\"Principal Activities\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false} ,\n   { \"Chinese\": \"年結日\", \"English\":\"Proposed first year end\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"最近一年審計報告\", \"English\":\"Last year audit report\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"最近一年稅計算表\", \"English\":\"Last year tax computation\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"最近一年報稅表\", \"English\":\"Last year profits tax return\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"所有銀行月結單\", \"English\":\"All bank statements for the audit period\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"簽回附件的銀行詢証函\", \"English\":\"Sign and return back the bank confirmation\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"簽回附件的稅務代表委任書\", \"English\":\"Sign and return back the appointmnet letter of tax rep\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"簽回附件的核數師委任書\", \"English\":\"Sign and return back the engagement letters\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"所有董事及股東的身份證\", \"English\":\"Please provide the HKID of all directors & shareholders\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"請提供商業登記證\", \"English\":\"Please provide the BR of the Company\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"收支表，資產負債表，明細表\", \"English\":\"Current year profit and loss and balance sheet, and ledger\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"僱主填報的薪酬及退休金報稅表\", \"English\":\"All Employers' return (56B form)\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"租約\", \"English\":\"Tenancy agreement\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false},\n   { \"Chinese\": \"請提供以下文件\", \"English\":\"Statutory documents as per attachment\", \"Asked\": false, \"Uploaded\": false, \"Checked\": false}\n   ];\n  get documentContentHeader() {\n    var returnString=\"\";\n    if ( this.document[\"sentDate\"]) {\n       returnString = \"Document Upload Request - ( Sent on \" + new Date(this.document[\"sentDate\"]) +\" )\";\n    } else {\n       returnString = \"Document Upload Request - New\"\n    }\n    return returnString;\n  }\n\n  ngOnInit(): void {\n    // generate random values for mainChart\n    this.route.params.subscribe(params => {\n       // this.id = +params['id']; // (+) converts string 'id' to a number\n       let route = this.route.snapshot;\n\n       while (route.firstChild) {\n           route = route.firstChild;\n       }\n\n       this.id =  route.params['id'];\n       console.log(\"id: \"+this.id);\n       var stringInput = localStorage.getItem('accountList');\n       this.accountList = JSON.parse(stringInput);\n       if (!this.accountList) {\n           return;\n       }\n\n       var foundindex=0;\n       for (var i=0; i < this.accountList.length; i ++) {\n           if (this.accountList[i]['Company Name'] === this.id){\n               foundindex = i;\n               break;\n           }\n       }\n       if (foundindex < 0 ) return;\n       this.accountInfo = this.accountList[foundindex];\n       this.accountInfo['Display Name'] = this.accountInfo[\"First Name\"] + \" \" + this.accountInfo[\"Last Name\"];\n       if (this.accountInfo['documents'] && this.accountInfo['documents'][this.accountInfo['documents'].length - 1]) {\n          this.document = this.accountInfo['documents'][0];\n\t  this.documentRequestList = this.accountInfo['documents'][0].documentRequestList;\n       }\n    });\n\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { ActivatedRoute, Route, ActivatedRouteSnapshot, UrlSegment, Params, Data, Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport {TemplateRef} from '@angular/core';\n\n\n\n\n@Component({\n  templateUrl: 'newaccountInvoice.component.html'\n})\nexport class NewaccountInvoiceComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: BsModalService,\n    private router: Router,\n  ) {\n    console.log(\"constructing NewaccountInvoiceComponent\")\n  }\n  modalRef: BsModalRef;\n  id: string;\n\n  @ViewChild('invoiceSentMsgTemplate') templateref: TemplateRef<any>;\n  invoice={};\n\n  accountInfo={};\n  accountList=[];\n\n  discount=0;\n  deposit=0;\n\n  confirmInvoice(): void {\n      this.accountInfo['invoices'][0]['confirmed']=true;\n      this.accountInfo['invoices'][0]['confirmed date']= new Date();\n      this.accountInfo['Status'] = '3. Document Upload';\n      for (var i=1; i< this.accountInfo['invoices'].length; i++ ) {\n          this.accountInfo['invoices'][i]['confirmed']=false;\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.router.navigate(['newaccount','document', this.id]);\n  }\n  next(): void {\n      this.invoice['discount'] = this.discount;\n      this.invoice['deposit'] = this.deposit;\n      this.invoice['lineItems'] = this.tableRows;\n      this.invoice['sentDate'] = new Date();\n      this.invoice['total'] = this.total;\n      var invoices = [];\n      if (this.accountInfo['invoices']) {\n         this.accountInfo['invoices'].unshift(this.invoice);\n      } else {\n         invoices.push(this.invoice);\n         this.accountInfo['invoices'] = invoices;\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.modalRef = this.modalService.show(this.templateref);\n  }\n\n\n\n  tableRows = [];\n  lineOptions = [\"Audit\",\"Tax Filing\",\"Tax Service\",\"NAR1\",\"Act as Co Sec\", \"RO Service\",\"Disbursement\",\"BR Fee\",\"Incorporation\",\"Share Transfer\",\"Deregistration\",\"Rental\"];\n  add() {\n    let temp = [...this.tableRows];\n    temp.push({\"Product\":\"Audit\",\"Description\":\"\",\"Amount\":\"0\"});\n    console.log(JSON.stringify(temp));\n    this.tableRows = temp;\n  }\n  deleteRow(rowIndex) {\n    let temp = [...this.tableRows];\n    temp.splice(rowIndex, 1);\n    this.tableRows = temp;\n  };\n  get invoiceContentHeader() {\n    var returnString=\"\";\n    if ( this.invoice[\"sentDate\"]) {\n       returnString = \"Invoice Content - ( Sent on \" + new Date(this.invoice[\"sentDate\"]) +\" )\";\n    } else {\n       returnString = \"Invoice Content - New\"\n    }\n    return returnString;\n  }\n  get total() {\n     var total = 0;\n     total = this.subTotal- this.discount;\n     return total;\n  };\n  get balanceDue() {\n     var balanceDue = 0;\n     balanceDue = this.total- this.deposit;\n     return balanceDue;\n  };\n  get subTotal() {\n     var sum=0;\n     for (var i=0; i< this.tableRows.length; i++) {\n        sum += this.tableRows[i]['Amount'];\n     }\n     return sum;\n  };\n\n  ngOnInit(): void {\n    // generate random values for mainChart\n    this.route.params.subscribe(params => {\n       // this.id = +params['id']; // (+) converts string 'id' to a number\n       let route = this.route.snapshot;\n\n       while (route.firstChild) {\n           route = route.firstChild;\n       }\n\n       this.id =  route.params['id'];\n       console.log(\"id: \"+this.id);\n       var stringInput = localStorage.getItem('accountList');\n       this.accountList = JSON.parse(stringInput);\n       if (!this.accountList) {\n           return;\n       }\n\n       var foundindex=0;\n       for (var i=0; i < this.accountList.length; i ++) {\n           if (this.accountList[i]['Company Name'] === this.id){\n               foundindex = i;\n               break;\n           }\n       }\n       if (foundindex < 0 ) return;\n       this.accountInfo = this.accountList[foundindex];\n       this.accountInfo['Display Name'] = this.accountInfo[\"First Name\"] + \" \" + this.accountInfo[\"Last Name\"];\n       var tmp = new Date();\n       var now = new Date(tmp.getFullYear(), tmp.getMonth(), tmp.getDate());\n       var exp = new Date(tmp.getFullYear(), tmp.getMonth()+1, tmp.getDate());\n       this.invoice[\"Invoice Date\"] = now;\n       this.invoice[\"Expiry Date\"] = exp;\n       if (this.accountInfo['invoices'] && this.accountInfo['invoices'][0]) {\n          this.invoice = this.accountInfo['invoices'][0];\n          this.tableRows = this.accountInfo['invoices'][0]['lineItems'];\n          this.discount = this.accountInfo['invoices'][0]['discount'];\n          this.deposit = this.accountInfo['invoices'][0]['deposit'];\n          this.invoice[\"Expiry Date\"] = new Date(this.invoice[\"Expiry Date\"]);\n          this.invoice[\"Invoice Date\"] = new Date(this.invoice[\"Invoice Date\"]);\n       } else {\n          this.tableRows = this.accountInfo['quotations'][0]['lineItems'];\n          this.discount=this.accountInfo['quotations'][0]['discount'];\n          this.deposit=this.accountInfo['quotations'][0]['deposit'];\n       }\n    });\n\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { ActivatedRoute, Route, ActivatedRouteSnapshot, UrlSegment, Params, Data, Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport {TemplateRef} from '@angular/core';\n\n\n\n\n@Component({\n  templateUrl: 'newaccountQuotation.component.html'\n})\nexport class NewaccountQuotationComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: BsModalService,\n    private router: Router,\n  ) {\n    console.log(\"constructing NewaccountQuotationComponent\")\n  }\n  modalRef: BsModalRef;\n  id: string;\n\n  @ViewChild('quotationSentMsgTemplate') templateref: TemplateRef<any>;\n  quotation={};\n\n  accountInfo={};\n  accountList=[];\n\n  discount=0;\n  deposit=0;\n\n  confirmQuotation(): void {\n      this.accountInfo['quotations'][0]['confirmed']=true;\n      this.accountInfo['quotations'][0]['confirmed date']= new Date();\n      this.accountInfo['Status'] = '2. Invoice';\n      for (var i=1; i< this.accountInfo['quotations'].length; i++ ) {\n          this.accountInfo['quotations'][i]['confirmed']=false;\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.router.navigate(['newaccount','invoice', this.id]);\n  }\n  next(): void {\n      this.quotation['discount'] = this.discount;\n      this.quotation['deposit'] = this.deposit;\n      this.quotation['lineItems'] = this.tableRows;\n      this.quotation['sentDate'] = new Date();\n      this.quotation['total'] = this.total;\n      var quotations = [];\n      if (this.accountInfo['quotations']) {\n         this.accountInfo['quotations'].unshift(this.quotation);\n      } else {\n         quotations.push(this.quotation);\n         this.accountInfo['quotations'] = quotations;\n      }\n      localStorage.setItem('accountList', JSON.stringify(this.accountList));\n      this.modalRef = this.modalService.show(this.templateref);\n  }\n\n\n\n  tableRows = [];\n  lineOptions = [\"Audit\",\"Tax Filing\",\"Tax Service\",\"NAR1\",\"Act as Co Sec\", \"RO Service\",\"Disbursement\",\"BR Fee\",\"Incorporation\",\"Share Transfer\",\"Deregistration\",\"Rental\"];\n  add() {\n    let temp = [...this.tableRows];\n    temp.push({\"Product\":\"Audit\",\"Description\":\"\",\"Amount\":\"0\"});\n    console.log(JSON.stringify(temp));\n    this.tableRows = temp;\n  }\n  deleteRow(rowIndex) {\n    let temp = [...this.tableRows];\n    temp.splice(rowIndex, 1);\n    this.tableRows = temp;\n  };\n  get quotationContentHeader() {\n    var returnString=\"\";\n    if ( this.quotation[\"sentDate\"]) {\n       returnString = \"Quotation Content - ( Sent on \" + new Date(this.quotation[\"sentDate\"]) +\" )\";\n    } else {\n       returnString = \"Quotation Content - New\"\n    }\n    return returnString;\n  }\n  get total() {\n     var total = 0;\n     total = this.subTotal- this.discount;\n     return total;\n  };\n  get balanceDue() {\n     var balanceDue = 0;\n     balanceDue = this.total- this.deposit;\n     return balanceDue;\n  };\n  get subTotal() {\n     var sum=0;\n     for (var i=0; i< this.tableRows.length; i++) {\n        sum += this.tableRows[i]['Amount'];\n     }\n     return sum;\n  };\n\n  ngOnInit(): void {\n    // generate random values for mainChart\n    this.route.params.subscribe(params => {\n       // this.id = +params['id']; // (+) converts string 'id' to a number\n       let route = this.route.snapshot;\n\n       while (route.firstChild) {\n           route = route.firstChild;\n       }\n\n       this.id =  route.params['id'];\n       console.log(\"id: \"+this.id);\n       var stringInput = localStorage.getItem('accountList');\n       this.accountList = JSON.parse(stringInput);\n       if (!this.accountList) {\n           return;\n       }\n\n       var foundindex=0;\n       for (var i=0; i < this.accountList.length; i ++) {\n           if (this.accountList[i]['Company Name'] === this.id){\n               foundindex = i;\n               break;\n           }\n       }\n       if (foundindex < 0 ) return;\n       this.accountInfo = this.accountList[foundindex];\n       this.accountInfo['Display Name'] = this.accountInfo[\"First Name\"] + \" \" + this.accountInfo[\"Last Name\"];\n       var tmp = new Date();\n       var now = new Date(tmp.getFullYear(), tmp.getMonth(), tmp.getDate());\n       var exp = new Date(tmp.getFullYear(), tmp.getMonth()+1, tmp.getDate());\n       this.quotation[\"Quotation Date\"] = now;\n       this.quotation[\"Expiry Date\"] = exp;\n       if (this.accountInfo['quotations'] && this.accountInfo['quotations'][0]) {\n          this.quotation = this.accountInfo['quotations'][0];\n          this.tableRows = this.accountInfo['quotations'][0]['lineItems'];\n          this.discount = this.accountInfo['quotations'][0]['discount'];\n          this.deposit = this.accountInfo['quotations'][0]['deposit'];\n          this.quotation[\"Expiry Date\"] = new Date(this.quotation[\"Expiry Date\"]);\n          this.quotation[\"Quotation Date\"] = new Date(this.quotation[\"Quotation Date\"]);\n       }\n    });\n\n  }\n}\n"],"sourceRoot":"webpack:///"}